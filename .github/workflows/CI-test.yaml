# For more information see: https://tinyurl.com/mr4y7r8n
name: Run Basic Tests
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Checkout LFS files
        run: git lfs pull
      - name: Checkout LFS files in submodules
        run: git submodule foreach --recursive git lfs pull
      - name: Check Mesh
        run: |
          ls tests/data/test_experiments/piControl_on_PI/mesh/pi/
          cat tests/data/test_experiments/piControl_on_PI/mesh/pi/aux3d.out
          cat tests/data/test_experiments/piControl_on_PI/mesh/pi/elem2d.out
          cat tests/data/test_experiments/piControl_on_PI/mesh/pi/nod2d.out
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up NetCDF4 with HDF5 support
        run: |
          sudo apt-get update
          sudo apt-get install -y libnetcdf-dev libhdf5-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if ${{ matrix.python-version == '3.12' }}; then pip install --upgrade setuptools; fi
      - name: Install package
        run: |
          python -m pip install ".[dev, fesom]"
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Check internet connectivity of CI runner
      #   run: |
      #     sudo apt-get install -y curl
      #     curl -s  https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | sudo bash
      #     sudo apt-get install -y speedtest
      #     speedtest --accept-license
      - name: Test if data will work (Meta-Test)
        run: |
          export HDF5_DEBUG=1
          export NETCDF_DEBUG=1
          export XARRAY_ENGINE=h5netcdf
          export PREFECT_SERVER_EPHEMERAL_STARTUP_TIMEOUT_SECONDS=300
          pytest -vvv -s --cov tests/meta/*.py
      - name: Test with pytest (Unit)
        run: |
          export XARRAY_ENGINE=h5netcdf
          export PREFECT_SERVER_EPHEMERAL_STARTUP_TIMEOUT_SECONDS=300
          pytest -vvv -s --cov tests/unit/*.py
          pytest -vvv -s --cov tests/unit/data_request/*.py
      - name: Test with pytest (Integration)
        run: |
          export XARRAY_ENGINE=h5netcdf
          export PREFECT_SERVER_EPHEMERAL_STARTUP_TIMEOUT_SECONDS=300
          pytest -vvv -s --cov tests/integration/*.py
      - name: Test with doctest
        run: |
          export PREFECT_SERVER_EPHEMERAL_STARTUP_TIMEOUT_SECONDS=300
          PYTHONPATH=src pytest -v --doctest-modules src/
  check_format:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install black
          python -m pip install flake8 pytest
          python -m pip install isort
          python -m pip install yamllint
          if ${{ matrix.python-version == '3.12' }}; then
            pip install --upgrade setuptools
          fi
      - name: Install package
        run: |
          python -m pip install .[dev]
      - name: Run isort
        run: |
          isort --profile black --check --skip ./cmip6-cmor-tables --skip ./versioneer.py --skip ./CMIP7_DReq_Software .
      - name: Lint with flake8
        run: |
          ## stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          ## exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          # stop at any error
          flake8 . --show-source --statistics --exclude ./cmip6-cmor-tables,./build,_version.py,./src/pymorize/webapp.py,./CMIP7_DReq_Software
      - name: Run black
        run: |
          black --check --extend-exclude 'cmip6-cmor-tables|CMIP7_DReq_Software|versioneer\.py|webapp\.py' .
      - name: yamllint
        run: |
          yamllint .
